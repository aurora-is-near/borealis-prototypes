syntax = "proto3";

package borealis.payloads.near;

import "payloads/near/block/transaction/errors/execution.proto";
import "payloads/near/block/transaction/receipt.proto";

message ExecutionOutcomeWithOptionalReceipt {
  ExecutionOutcomeWithIdView execution_outcome = 1;
  optional ReceiptView receipt = 2;
}

message ExecutionOutcomeWithReceipt {
  ExecutionOutcomeWithIdView execution_outcome = 1;
  ReceiptView receipt = 2;
}

message ExecutionOutcomeWithIdView {
  repeated MerklePathItem proof = 1;
  bytes h256_block_hash = 2;
  bytes h256_id = 3;
  ExecutionOutcomeView outcome = 4;
}

message ExecutionOutcomeView {
  repeated string logs = 1;
  repeated bytes h256_receipt_ids = 2;
  uint64 gas_burnt = 3;
  bytes u128_tokens_burnt = 4;
  string executor_id = 5;
  ExecutionStatusView status = 6;
  ExecutionMetadataView metadata = 7;
}

message ExecutionStatusView {
  message Unknown {}
  message Failure {
    TxExecutionError error = 1;
  }
  message SuccessValue {
    bytes value = 1;
  }
  message SuccessReceiptId {
    bytes h256_receipt_hash = 1;
  }
  oneof variant {
    Unknown unknown = 1;
    Failure failure = 2;
    SuccessValue success_value = 3;
    SuccessReceiptId success_receipt_id = 4;
  }
}

message ExecutionMetadataView {
  message RepeatedCostGasUsed {
    repeated CostGasUsed gas_profile = 2;
  }
  uint32 version = 1;
  optional RepeatedCostGasUsed gas_profile = 2;
}

message MerklePathItem {
  bytes h256_hash = 1;
  Direction direction = 2;
}

enum Direction {
  LEFT = 0;
  RIGHT = 1;
}

message CostGasUsed {
  CostCategory cost_category = 1;
  Cost cost = 2;
  uint64 gas_used = 3;
}

enum CostCategory {
  ACTION_COST = 0;
  WASM_HOST_COST = 1;
}

message Cost {
  message ActionCost {
    ActionCosts value = 1;
  }
  message ExtCost {
    ExtCosts value = 1;
  }
  message WasmInstruction {}
  oneof variant {
    ActionCost action_cost = 1;
    ExtCost ext_cost = 2;
    WasmInstruction wasm_instruction = 3;
  }
}

enum ActionCosts {
  CREATE_ACCOUNT = 0;
  DELETE_ACCOUNT = 1;
  DEPLOY_CONTRACT = 2;
  FUNCTION_CALL = 3;
  TRANSFER = 4;
  STAKE = 5;
  ADD_KEY = 6;
  DELETE_KEY = 7;
  VALUE_RETURN = 8;
  NEW_RECEIPT = 9;
  DEPLOY_CONTRACT_BASE = 10;
  DEPLOY_CONTRACT_BYTE = 11;
  FUNCTION_CALL_BASE = 12;
  FUNCTION_CALL_BYTE = 13;
  ADD_FULL_ACCESS_KEY = 14;
  ADD_FUNCTION_CALL_KEY_BASE = 15;
  ADD_FUNCTION_CALL_KEY_BYTE = 16;
  NEW_ACTION_RECEIPT = 17;
  NEW_DATA_RECEIPT_BASE = 18;
  NEW_DATA_RECEIPT_BYTE = 19;
  DELEGATE = 20;
}

enum ExtCosts {
  BASE = 0;
  CONTRACT_COMPILE_BASE = 1;
  CONTRACT_COMPILE_BYTES = 2;
  READ_MEMORY_BASE = 3;
  READ_MEMORY_BYTE = 4;
  WRITE_MEMORY_BASE = 5;
  WRITE_MEMORY_BYTE = 6;
  READ_REGISTER_BASE = 7;
  READ_REGISTER_BYTE = 8;
  WRITE_REGISTER_BASE = 9;
  WRITE_REGISTER_BYTE = 10;
  UTF8_DECODING_BASE = 11;
  UTF8_DECODING_BYTE = 12;
  UTF16_DECODING_BASE = 13;
  UTF16_DECODING_BYTE = 14;
  SHA256_BASE = 15;
  SHA256_BYTE = 16;
  KECCAK256_BASE = 17;
  KECCAK256_BYTE = 18;
  KECCAK512_BASE = 19;
  KECCAK512_BYTE = 20;
  RIPEMD160_BASE = 21;
  RIPEMD160_BLOCK = 22;
  ECRECOVER_BASE = 23;
  LOG_BASE = 24;
  LOG_BYTE = 25;
  STORAGE_WRITE_BASE = 26;
  STORAGE_WRITE_KEY_BYTE = 27;
  STORAGE_WRITE_VALUE_BYTE = 28;
  STORAGE_WRITE_EVICTED_BYTE = 29;
  STORAGE_READ_BASE = 30;
  STORAGE_READ_KEY_BYTE = 31;
  STORAGE_READ_VALUE_BYTE = 32;
  STORAGE_REMOVE_BASE = 33;
  STORAGE_REMOVE_KEY_BYTE = 34;
  STORAGE_REMOVE_RET_VALUE_BYTE = 35;
  STORAGE_HAS_KEY_BASE = 36;
  STORAGE_HAS_KEY_BYTE = 37;
  STORAGE_ITER_CREATE_PREFIX_BASE = 38;
  STORAGE_ITER_CREATE_PREFIX_BYTE = 39;
  STORAGE_ITER_CREATE_RANGE_BASE = 40;
  STORAGE_ITER_CREATE_FROM_BYTE = 41;
  STORAGE_ITER_CREATE_TO_BYTE = 42;
  STORAGE_ITER_NEXT_BASE = 43;
  STORAGE_ITER_NEXT_KEY_BYTE = 44;
  STORAGE_ITER_NEXT_VALUE_BYTE = 45;
  TOUCHING_TRIE_NODE = 46;
  READ_CACHED_TRIE_NODE = 47;
  PROMISE_AND_BASE = 48;
  PROMISE_AND_PER_PROMISE = 49;
  PROMISE_RETURN = 50;
  VALIDATOR_STAKE_BASE = 51;
  VALIDATOR_TOTAL_STAKE_BASE = 52;
  ALT_BN128_G1_MULTIEXP_BASE = 53;
  ALT_BN128_G1_MULTIEXP_ELEMENT = 54;
  ALT_BN128_PAIRING_CHECK_BASE = 55;
  ALT_BN128_PAIRING_CHECK_ELEMENT = 56;
  ALT_BN128_G1_SUM_BASE = 57;
  ALT_BN128_G1_SUM_ELEMENT = 58;
  ED25519_VERIFY_BASE = 59;
  ED25519_VERIFY_BYTE = 60;
  CONTRACT_LOADING_BASE = 61;
  CONTRACT_LOADING_BYTES = 62;
  YIELD_CREATE_BASE = 63;
  YIELD_CREATE_BYTE = 64;
  YIELD_RESUME_BASE = 65;
  YIELD_RESUME_BYTE = 66;
}
