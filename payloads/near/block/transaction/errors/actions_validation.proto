syntax = "proto3";

package borealis.payloads.near;

import "payloads/near/common/common.proto";

// Describes the error for validating a list of actions.
message ActionsValidationError {
  // The delete action must be a final aciton in transaction
  message DeleteActionMustBeFinal {}
  // The total prepaid gas (for all given actions) exceeded the limit.
  message TotalPrepaidGasExceeded {
    uint64 total_prepaid_gas = 1;
    uint64 limit = 2;
  }
  // The number of actions exceeded the given limit.
  message TotalNumberOfActionsExceeded {
    uint64 total_number_of_bytes = 1;
    uint64 limit = 2;
  }
  // The total number of bytes of the method names exceeded the limit in a Add Key action.
  message AddKeyMethodNamesNumberOfBytesExceeded {
    uint64 total_number_of_bytes = 1;
    uint64 limit = 2;
  }
  // The length of some method name exceeded the limit in a Add Key action.
  message AddKeyMethodNameLengthExceeded {
    uint64 length = 1;
    uint64 limit = 2;
  }
  // Integer overflow during a compute.
  message IntegerOverflow {}
  // Invalid account ID.
  message InvalidAccountId {
    string account_id = 1;
  }
  // The size of the contract code exceeded the limit in a DeployContract action.
  message ContractSizeExceeded {
    uint64 size = 1;
    uint64 limit = 2;
  }
  // The length of the method name exceeded the limit in a Function Call action.
  message FunctionCallMethodNameLengthExceeded {
    uint64 length = 1;
    uint64 limit = 2;
  }
  // The length of the arguments exceeded the limit in a Function Call action.
  message FunctionCallArgumentsLengthExceeded {
    uint64 length = 1;
    uint64 limit = 2;
  }
  // An attempt to stake with a public key that is not convertible to ristretto.
  message UnsuitableStakingKey {
    PublicKey public_key = 1;
  }
  // The attached amount of gas in a FunctionCall action has to be a positive number.
  message FunctionCallZeroAttachedGas {}
  // There should be the only one DelegateAction
  message DelegateActionMustBeOnlyOne {}
  // The transaction includes a feature that the current protocol version
  // does not support.
  //
  // Note: we stringify the protocol feature name instead of using
  // `ProtocolFeature` here because we don't want to leak the internals of
  // that type into observable borsh serialization.
  message UnsupportedProtocolFeature {
    string protocol_feature = 1;
    uint32 version = 2;
  }
  oneof variant {
    DeleteActionMustBeFinal delete_action_must_be_final = 1;
    TotalPrepaidGasExceeded total_prepaid_gas_exceeded = 2;
    TotalNumberOfActionsExceeded total_number_of_actions_exceeded = 3;
    AddKeyMethodNamesNumberOfBytesExceeded add_key_method_names_number_of_bytes_exceeded = 4;
    AddKeyMethodNameLengthExceeded add_key_method_name_length_exceeded = 5;
    IntegerOverflow integer_overflow = 6;
    InvalidAccountId invalid_account_id = 7;
    ContractSizeExceeded contract_size_exceeded = 8;
    FunctionCallMethodNameLengthExceeded function_call_method_name_length_exceeded = 9;
    FunctionCallArgumentsLengthExceeded function_call_arguments_length_exceeded = 10;
    UnsuitableStakingKey unsuitable_staking_key = 11;
    FunctionCallZeroAttachedGas function_call_zero_attached_gas = 12;
    DelegateActionMustBeOnlyOne delegate_action_must_be_only_one = 13;
    UnsupportedProtocolFeature unsupported_protocol_feature = 14;
  }
}
