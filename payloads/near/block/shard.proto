syntax = "proto3";

package borealis.payloads.near;

import "payloads/near/common/common.proto";
import "payloads/near/block/stake.proto";
import "payloads/near/block/transaction/execution.proto";
import "payloads/near/block/transaction/state_change.proto";
import "payloads/near/block/transaction/transaction.proto";
import "payloads/near/block/transaction/receipt.proto";

option go_package = "github.com/aurora-is-near/borealis-prototypes/go/payloads/near_block;nearblock";

message BlockShard {
  uint64 shard_id = 1;
  optional ChunkView chunk = 2;
  repeated ExecutionOutcomeWithReceipt receipt_execution_outcomes = 3;
  repeated StateChangeWithCauseView state_changes = 4;
  PartialBlockHeaderView header = 5;
}

message ChunkView {
  string author = 1;
  ChunkHeaderView header = 2;
  repeated TransactionWithOutcome transactions = 3;
  repeated ReceiptView receipts = 4;
}

message ChunkHeaderView {
  bytes h256_chunk_hash = 1;
  bytes h256_prev_block_hash = 2;
  bytes h256_outcome_root = 3;
  bytes h256_prev_state_root = 4;
  bytes h256_encoded_merkle_root = 5;
  uint64 encoded_length = 6;
  uint64 height_created = 7;
  uint64 height_included = 8;
  uint64 shard_id = 9;
  uint64 gas_used = 10;
  uint64 gas_limit = 11;
  bytes u128_validator_reward = 12;
  bytes u128_balance_burnt = 13;
  bytes h256_outgoing_receipts_root = 14;
  bytes h256_tx_root = 15;
  repeated ValidatorStakeView validator_proposals = 16;
  Signature signature = 17;
}

message PartialBlockHeaderView {
  string author = 1;
  PartialIndexerBlockHeaderView header = 2;
}

message PartialIndexerBlockHeaderView {
  uint64 height = 1;
  optional uint64 prev_height = 2;
  bytes h256_epoch_id = 3;
  bytes h256_next_epoch_id = 4;
  bytes h256_hash = 5;
  bytes h256_prev_hash = 6;
  bytes h256_prev_state_root = 7;
  bytes h256_chunk_receipts_root = 8;
  bytes h256_chunk_headers_root = 9;
  bytes h256_chunk_tx_root = 10;
  bytes h256_outcome_root = 11;
  uint64 chunks_included = 12;
  bytes h256_challenges_root = 13;
  uint64 timestamp = 14;
  uint64 timestamp_nanosec = 15;
  bytes h256_random_value = 16;
  repeated bool chunk_mask = 17;
  bytes u128_gas_price = 18;
  optional uint64 block_ordinal = 19;
  bytes u128_total_supply = 20;
  bytes h256_last_final_block = 21;
  bytes h256_last_ds_final_block = 22;
  bytes h256_next_bp_hash = 23;
  bytes h256_block_merkle_root = 24;
  optional bytes h256_epoch_sync_data_hash = 25;
  Signature signature = 26;
  uint32 latest_protocol_version = 27;
}
